
//8A:01:9A:84:BF:D2:3F:07:00:38:89:82:D4:7A:EA:B9:73:BF:F8:9A

start - overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
end   - overridePendingTransition(R.anim.slide_in_left, R.anim.slide_out_right);

 //pass recycler view to activity
 ((OrderCategoryActivity) mInflater.getContext()).start();


 //recycler view sinc
 @Override
    public long getItemId(int position) {
        return position;
    }

    @Override
    public int getItemViewType(int position) {
        return position;
    }



    â‚¹
    
    //reload activity
    finish();
    startActivity(getIntent());


    //clear privious activity
    setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);



    //open google map
        try {
            String geoUri = "http://maps.google.com/maps?q=loc:" + lat.get(position) + "," + lon.get(position) + " (" + "Address" + ")";
            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(geoUri));
            v.getContext().startActivity(intent);
        } catch (Exception e) {
            Toast.makeText(v.getContext(), e.getMessage(), Toast.LENGTH_LONG).show();
        }





     //click anim     
     android:clickable="true"
    android:background="?android:attr/selectableItemBackground"

    android:background="?selectableItemBackgroundBorderless"
                                android:clickable="true"
                                android:focusable="true"
  





      //volly
      private void createOrder() {
        String URL = "https://www.sourcehub.in/api/customer/order/create";
        final RequestQueue requestQueue = Volley.newRequestQueue(CartItemActivity.this);
        StringRequest stringRequest = new StringRequest(Request.Method.POST, URL, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                JSONObject json1 = null;
                try {
                    json1 = new JSONObject(response);
                    final boolean success = json1.getBoolean("success");
                    if (success) {
                        toast(json1.getString("message"));
                        Intent intent = new Intent(CartItemActivity.this, CompleteOrderActivity.class);
                        startActivity(intent);

                    } else {
                        toast(json1.getString("message"));
                    }
                } catch (JSONException e) {
                    toast("Some thing went wrong: " + e.getMessage());
                }

            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                toast("Some thing went wrong: " + error.getMessage());
            }
        }) {
            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String, String> params = new HashMap<String, String>();

                params.put("customer_id", CInfo.getCustomerId());

                return params;
            }
        };
        requestQueue.getCache().clear();
        requestQueue.add(stringRequest);
    }



//glide
Glide.with(holder.product_image.getContext())
                .load(productImage.get(position))
                .listener(new RequestListener<Drawable>() {
                    @Override
                    public boolean onLoadFailed(@Nullable GlideException e, Object model, Target<Drawable> target, boolean isFirstResource) {
                        holder.imageProgress.setVisibility(View.GONE);
                        return false;
                    }

                    @Override
                    public boolean onResourceReady(Drawable resource, Object model, Target<Drawable> target, DataSource dataSource, boolean isFirstResource) {
                        holder.imageProgress.setVisibility(View.GONE);
                        return false;
                    }
                })
                .error(R.drawable.ic_outline_casino_24)
                .into(holder.product_image);




// ripple effect

<?xml version="1.0" encoding="utf-8"?>
<ripple xmlns:android="http://schemas.android.com/apk/res/android"
    android:color="@color/pink">

    <item android:id="@android:id/background">
        <shape xmlns:android="http://schemas.android.com/apk/res/android"
            android:shape="rectangle">
            <stroke
                android:width="1dip"
                android:color="@color/pink" />
            <corners android:radius="0dp" />
            <solid
                android:angle="100"
                android:color="#ffffff" />
        </shape>
    </item>
</ripple>



// create dialog
public class NewPostDialog extends AppCompatDialogFragment {




    @RequiresApi(api = Build.VERSION_CODES.N)
    @NonNull
    @Override
    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
        //AlertDialog.Builder builder = new AlertDialog.Builder(getActivity(),R.style.CustomDialog);
        final Dialog builder = new Dialog(getActivity());
        LayoutInflater inflater = getActivity().getLayoutInflater();
        View view = inflater.inflate(R.layout.dialog_new_post, null);
        init(view);






        builder.setContentView(view);
        builder.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        return builder;
    }

    private void init(View view){

    }


}



//progress ber
private MyProgressDialog_white progressDialog;
progressDialog = new MyProgressDialog_white(this);
progressDialog.setCancelable(false);
